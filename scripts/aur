#!/bin/sh

# aur a simple aur manager

# USAGE
# install [package(s)] (Install an aur package)
# update (Update all aur packages on system)
# search (Searches through aur database, 
# clean (This removes cache of deleted aur packages)

# For search, download https://aur.archlinux.org/packages.gz and unzip it into your $CACHE_DIR dir.

# This is the dir where aur keeps up with the built packages; you can put it where ever you like.

CACHE_DIR="/home/$USER/.cache/aur"

install () {
	cd "$CACHE_DIR" || exit

	for package in "$@"
	do
		[ "$package" = "install" ] && continue
	
		git clone "https://aur.archlinux.org/$package" 2>/dev/null
			
		if ! ls "$package" | grep -qw "PKGBUILD"
		then
			echo "$0: $package is not a package."
			rm -rf "$package" && exit 1
		fi

		cd "$package" || exit
	
		makepkg -si
		
		cd "$CACHE_DIR" || exit
	done	
}

update () {
	cd "$CACHE_DIR" || exit
	for package in "$CACHE_DIR"/*
	do
		package=$(echo "$package" | awk -F "/" '{print $NF}')

		[ "$package" = "packages" ] && continue

		if ! ls "$package" | grep -qw "PKGBUILD"
		then
			echo "$0: $package is not a package." && exit 1
		fi

		git clone "https://aur.archlinux.org/$package" "$package-tmp" 2>/dev/null
		
		if [ "$(awk -F "=" '/^pkgver/ {print $2}' "$package/PKGBUILD")" != \
		       	"$(awk -F "=" '/^pkgver/ {print $2}' "$package-tmp/PKGBUILD")" ]
		then
			rm -rf "$package"
			mv "$package-tmp" "$package"
			cd "$package" || exit
			makepkg -si
			
			cd "$CACHE_DIR" || exit
		else
			rm -rf "$package-tmp"
		fi
	done
}

clean () {
	cd "$CACHE_DIR" || exit
	for package in "$CACHE_DIR"/*
	do
		package=$(echo "$package" | awk -F "/" '{print $NF}')
		
		[ "$package" = "packages" ] && continue
	
		# Check pacman -Qq too, because different Arch based distros might see the package
		# as in its repo.

		if ! { pacman -Qq; pacman -Qqm; } | grep -qw "$package"
		then
			rm -rf "$package"
		fi
		
	done
}

search () { 
	for package in "$@"
	do
		[ "$package" = "search" ] && continue

		grep --color=auto "$package" "$CACHE_DIR/packages"
	done
}

case "$1" in 
	install) install "$@" ;;
	update) update ;;
	search) search "$@" ;;
	clean) clean ;; 
	*) echo "$0: [install update search clean]" && exit 1 ;;
esac
